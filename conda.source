#!/bin/bash
#
# Saner handling of anaconda/mambaforge environments with the conda/mamba commands.
# Avoids Anaconda/Mambaforge affecting your environment until you have activated an
# environment using the conda/mamba commands.
#
## Setup for Anaconda:
# 
# 1. Install Anaconda without doing 'conda init' or adding anything
#     to your .bashrc / .bash_profile
# 2. Edit your .bashrc to contain the following::
#  
#      export ANACONDA_PATH="/opt/anaconda3"
#      function conda() { source "/home/example/Scripts/conda.source" "$@" }
#       
#    where you replace /opt/anaconda3 with the path where you have installed Anaconda, and 
#    /home/example/Scripts/conda.source with the path of the present script.
#
# 3. Open a new terminal window or log out and log in again.
#
# After this, running 'conda' works almost as normal, however, your Anaconda installation does not
# affect anything at in your system until you do a 'conda activate <environment>'. After doing that,
# the conda environment works as usual, until you do 'conda deactive', at which point you return to
# a system unaffected by your Anaconda installation.
#
## Setup for Mambaforge  
# 
# Follow the steps above, but instead install Mambaforge from 
#   https://github.com/conda-forge/miniforge/releases
# and use the following in your init script::
#
#      export MAMBAFORGE_PATH="/opt/mambaforge"
#      function conda() { source "/home/example/Scripts/conda.source" "$@" }
#      function mamba() { source "/home/example/Scripts/conda.source" "$@" }
# 
# (c) Rickard Armiento, 2020-2022

BINNAME="${FUNCNAME[1]}"

if [ "$BINNAME" != "conda" -a "$BINNAME" != "mamba" ]; then
    echo "${BINNAME}: command not found" >&2
    return
fi

if [ -n "$MAMBAFORGE_PATH" ]; then
  FW_PATH="$MAMBAFORGE_PATH"
else
  FW_PATH="$ANACONDA_PATH"
fi

if [ -z "$FW_PATH" -o ! -e "$FW_PATH" ]; then
    echo "${BINNAME}: command not found" >&2
    return
fi

if [ -z "$SANECONDA_PATH" ]; then
    SANECONDA_PATH="${BASH_SOURCE[0]}"
fi

# If we are in an active environment, just run the original conda/mamba command
if [ -n "$CONDA_DEFAULT_ENV" -a "$CONDA_DEFAULT_ENV" != "base" ]; then
  if type "orig_${BINNAME}" >& /dev/null; then          
	  "orig_${BINNAME}" "$@"
	  return
  fi
fi

if [ "$CONDA_DEFAULT_ENV" == "base" -a "$1" == "deactivate" ]; then
  if type "orig_${BINNAME}" >& /dev/null; then
    "orig_${BINNAME}" "$@"
    unset -f "orig_conda"
    unset -f "orig_mamba"
    return
  fi
fi

function help_message() {
    echo "This setup of Anaconda deliberately does not affect your environment until"
    echo "you have explicitly activated an anaconda environment."
    echo ""
    echo "To set up a customized Anaconda environment:"
    echo ""
    echo "  1. Create a new environement with, e.g., 'conda create -n myenv'."
    echo "  2. Activate it with 'conda activate myenv'."
    echo "  3. Run desired 'conda install ...' and 'conda update ...' commands to set up your environment."
    echo ""
    echo "If you get this message when trying to follow an external help document"
    echo "that instructs you to run 'conda install' etc., just create a new environment"
    echo "and activate it using the instructions above, and then continue onwards with"
    echo "the instructions."
    echo ""
    echo "For more details about managing anaconda environments, see the following link:"
    echo ""
    echo "  https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html"
    echo ""
}

if [ "$1" == "env" ]; then
    COMMAND="$2"
else
    COMMAND="$1"
fi

if [ "$COMMAND" == "install" -o "$COMMAND" == "update" ]; then
    ENVARG="FALSE"
    for ARG in "$@"; do
	if [ "$ARG" == "-n" -o "$ARG" == "--name" -o "$ARG" == "--prefix" -o "$ARG" == "-p" ]; then
	    ENVARG="TRUE"
	fi
    done
    if [ "$ENVARG" != "TRUE" ]; then
	help_message
	return
    fi
fi

if [ "$1" == "init" ]; then
    echo "There is no need to run '${BINNAME} init'."
    echo "Just activate an environment, e.g., '${BINNAME} activate myenv'"
    echo "(where you must have created myenv using '${BINNAME} create -n myenv' first)"
    echo ""
    return
fi

if [ "$1" == "activate" ]; then

    if [ -e "$FW_PATH/bin/conda" ]; then
	unset -f conda >& /dev/null
	eval "$("$FW_PATH/bin/conda" shell.bash hook)"
	eval orig_"$(declare -f conda)"
	function conda() { source "$SANECONDA_PATH" "$@"; }
    fi

    if [ -e "$FW_PATH/etc/profile.d/mamba.sh" ]; then    
	unset -f mamba >& /dev/null
	source "$FW_PATH/etc/profile.d/mamba.sh"
	eval orig_"$(declare -f mamba)"
	function mamba() { source "$SANECONDA_PATH" "$@"; }
    fi
	
    "orig_${BINNAME}" "$@"
    return
else
    (
      unset -f conda >& /dev/null
      unset -f mamba >& /dev/null
      eval "$("$FW_PATH/bin/conda" shell.bash hook)"
      source "$FW_PATH/etc/profile.d/mamba.sh"
      "$BINNAME" "$@"
    )
    return
fi
